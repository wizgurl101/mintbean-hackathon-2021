{"version":3,"sources":["store/csrf.js","store/session.js","store/modal.js","components/Modal/modal.js","store/modal2.js","components/Modal/modal2.js","components/Card/index.js","components/auth/Login.js","components/auth/Signup.js","components/Navbars/GameNavBar.js","components/GameBoardPage/index.js","components/GameBoardPage/OnlineGameBoard.js","components/Navbars/Navbar.js","components/Homepage/Home.js","components/About/About.js","store/leaderboard.js","components/LeaderboardPage/index.js","App.js","store/index.js","index.js"],"names":["csrfFetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","fetch","res","status","SET_USER","REMOVE_USER","UPDATE_USER_NUMBER_OF_GAME_WON","setUser","user","type","payload","updateUserNumberOfGameWon","login","username","password","dispatch","body","JSON","stringify","response","json","data","errors","logout","signUp","name","initialState","SHOW","HIDE","CURRENT","MOUNT","Modal","useDispatch","mount","useSelector","state","modal","display","Current","current","ReactDOM","createPortal","onClick","className","e","stopPropagation","id","SHOW2","HIDE2","CURRENT2","MOUNT2","showModal2","hideModal2","setCurrentModal2","Modal2","modal2","mount2","display2","current2","Card","useState","deck","setDeck","dealerHand","setDealerHand","playerHand","setPlayerHand","dealerValue","setDealerValue","playerValue","setPlayerValue","hide","setHide","isNameShown","setIsNameShown","disable","setDisable","playingGame","setPlayingGame","hideButton","setHideButton","useDisclosure","isOpen","onOpen","onClose","youWin","setYouWin","youLose","setYouLose","Tie","setTie","session","useEffect","tempDeck","cardVal","suits","i","length","cardV","j","card","push","shuffleDeck","startSolo","array","Math","floor","random","temp","gameOver","console","log","dealerVal","num","split","Number","playerVal","mt","centerContent","mb","colorScheme","size","disabled","prevState","playerCard1","dealerCard1","playerCard2","dealerCard2","updatedDeck","slice","temp2","playerCopy","dealerCopy","dealerHandCopy","deckCopy","updateUserGameStat","fontSize","textColor","mr","ml","hidden","bg","color","w","h","border","borderRadius","templateRows","align","map","transform","noOfLines","LoginForm","history","useHistory","setUsername","setPassword","onLogin","preventDefault","to","onSubmit","error","maxW","textAlign","placeholder","value","onChange","target","SignUpForm","repeatPassword","setRepeatPassword","onSignUp","alert","required","Navbar","direction","spacing","Login","SignUp","Gameboard","GameNavBar","OnlineGameBoard","socket","io","on","message","Home","About","href","GET_LEADER_BOARD_INFO","users","Leaderboard","loading","setLoading","leaderboard","thickness","speed","emptyColor","variant","placement","numOfGameWon","_id","App","enhancer","loaded","setLoaded","path","exact","rootReducer","combineReducers","action","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","modalMooringRef","useRef","modalMooringRef2","ref","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cf84c1f.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\r\n\r\nexport async function csrfFetch(url, options = {}) {\r\n\t// set options.method to 'GET' if there is no method\r\n\toptions.method = options.method || \"GET\";\r\n\t// set options.headers to an empty object if there is no headers\r\n\toptions.headers = options.headers || {};\r\n\r\n\t// if the options.method is not 'GET', then set the \"Content-Type\" header to\r\n\t// \"application/json\", and set the \"XSRF-TOKEN\" header to the value of the\r\n\t// \"XSRF-TOKEN\" cookie\r\n\tif (options.method.toUpperCase() !== \"GET\") {\r\n\t\toptions.headers[\"Content-Type\"] =\r\n\t\t\toptions.headers[\"Content-Type\"] || \"application/json\";\r\n\t\toptions.headers[\"XSRF-Token\"] = Cookies.get(\"XSRF-TOKEN\");\r\n\t}\r\n\t// call the default window's fetch with the url and the options passed in\r\n\tconst res = await window.fetch(url, options);\r\n\r\n\t// if the response status code is 400 or above, then throw an error with the\r\n\t// error being the response\r\n\tif (res.status >= 400) throw res;\r\n\r\n\t// if the response status code is under 400, then return the response to the\r\n\t// next promise chain\r\n\treturn res;\r\n}\r\n\r\n// call this to get the \"XSRF-TOKEN\" cookie, should only be used in development\r\nexport function restoreCSRF() {\r\n  return csrfFetch('/api/csrf/restore');\r\n}\r\n","import { csrfFetch } from \"../store/csrf\";\r\n// constants\r\nconst SET_USER = \"session/SET_USER\";\r\nconst REMOVE_USER = \"session/REMOVE_USER\";\r\nconst UPDATE_USER_NUMBER_OF_GAME_WON = \"session/UPDATE_USER_NUMBER_OF_GAME_WON\";\r\n\r\nconst setUser = (user) => ({\r\n  type: SET_USER,\r\n  payload: user,\r\n});\r\n\r\nconst removeUser = () => ({\r\n  type: REMOVE_USER,\r\n});\r\n\r\nconst updateUserNumberOfGameWon = (user) => ({\r\n  type: UPDATE_USER_NUMBER_OF_GAME_WON,\r\n  payload: user,\r\n});\r\n\r\n// RESTORE USER\r\nexport const authenticate = () => async (dispatch) => {\r\n  const response = await csrfFetch(\"/api/users/restore\", {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n  if (data.errors) {\r\n    return;\r\n  }\r\n  if (data.user) {\r\n    dispatch(setUser(data.user.username));\r\n  }\r\n};\r\n\r\n// LOGIN USER\r\nexport const login = (username, password) => async (dispatch) => {\r\n  const response = await csrfFetch(\"/api/users/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  });\r\n  const data = await response.json();\r\n  if (data.errors) {\r\n    return data;\r\n  }\r\n  dispatch(setUser(data.username));\r\n};\r\n\r\n// LOGOUT USER\r\nexport const logout = () => async (dispatch) => {\r\n  await csrfFetch(\"/api/users/logout\", {\r\n    method: \"DELETE\",\r\n  });\r\n  dispatch(removeUser());\r\n};\r\n\r\nexport const signUp = (username, password) => async (dispatch) => {\r\n  const response = await fetch(\"/api/users/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  });\r\n  const data = await response.json();\r\n  dispatch(setUser(data.name));\r\n};\r\n\r\n// UPDATE USER'S NUMBER OF GAME WON\r\nexport const updateUserGameStat = (user) => async (dispatch) => {\r\n  const response = await csrfFetch(\"/api/users/updateGameStat\", {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({\r\n      user,\r\n    }),\r\n  });\r\n  const data = await response.json();\r\n  if (data.errors) {\r\n    return data;\r\n  }\r\n  dispatch(updateUserNumberOfGameWon(data));\r\n};\r\n\r\n// reducer\r\nconst initialState = { user: null };\r\n\r\n// useSelector(state => state.session.user)\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return { user: action.payload };\r\n    case REMOVE_USER:\r\n      return { user: null };\r\n    case UPDATE_USER_NUMBER_OF_GAME_WON:\r\n      return { user: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const SHOW = \"modal/show\";\r\n\r\nconst HIDE = \"modal/hide\";\r\n\r\nconst CURRENT = \"modal/current\";\r\n\r\nconst MOUNT = \"modal/mount\";\r\n\r\nexport const showModal = () => ({\r\n  type: SHOW,\r\n});\r\nexport const hideModal = () => ({\r\n  type: HIDE,\r\n});\r\nexport const setCurrentModal = (current) => ({\r\n  type: CURRENT,\r\n  current\r\n});\r\nexport const setModalMount = (mount) => ({\r\n  type: MOUNT,\r\n  mount\r\n});\r\n\r\nexport default function reducer(\r\n  state = { current: null, mount: null, display: false },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SHOW:\r\n      return { ...state, display: true };\r\n    case HIDE:\r\n      return { ...state, display: false };\r\n    case CURRENT:\r\n      return { ...state, current: action.current };\r\n    case MOUNT:\r\n      return { ...state, mount: action.mount };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport {hideModal} from '../../store/modal'\r\n\r\nimport \"./modal.css\";\r\n\r\nfunction Modal() {\r\n  const dispatch = useDispatch();\r\n  const mount = useSelector((state) => state.modal.mount);\r\n  const display = useSelector((state) => state.modal.display);\r\n  // Any react component can be passed onto this\r\n  const Current = useSelector((state) => state.modal.current);\r\n\r\n  const onClose = () => {\r\n    dispatch(hideModal())\r\n  }\r\n\r\n  return (\r\n    mount &&\r\n    display &&\r\n    ReactDOM.createPortal(\r\n      <div onClick={onClose} className=\"modal-background\">\r\n     \r\n        <div onClick={(e) => e.stopPropagation()} className=\"modal-content\" id=\"modal-content\">\r\n          <Current />\r\n        </div>\r\n      </div>,\r\n      mount\r\n    )\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","const SHOW2 = \"modal2/show\";\r\n\r\nconst HIDE2 = \"modal2/hide\";\r\n\r\nconst CURRENT2 = \"modal2/current\";\r\n\r\nconst MOUNT2 = \"modal2/mount\";\r\n\r\nexport const showModal2 = () => ({\r\n  type: SHOW2,\r\n});\r\nexport const hideModal2 = () => ({\r\n  type: HIDE2,\r\n});\r\nexport const setCurrentModal2 = (current) => ({\r\n  type: CURRENT2,\r\n  current\r\n});\r\nexport const setModalMount2 = (mount) => ({\r\n  type: MOUNT2,\r\n  mount\r\n});\r\n\r\nexport default function reducer(\r\n  state = { current2: null, mount2: null, display2: false },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case SHOW2:\r\n      return { ...state, display2: true };\r\n    case HIDE2:\r\n      return { ...state, display2: false };\r\n    case CURRENT2:\r\n      return { ...state, current2: action.current };\r\n    case MOUNT2:\r\n      return { ...state, mount2: action.mount };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { hideModal2 } from \"../../store/modal2\";\r\n\r\nimport \"./modal2.css\";\r\n\r\nfunction Modal2() {\r\n  const dispatch = useDispatch();\r\n  const mount = useSelector((state) => state.modal2.mount2);\r\n  const display = useSelector((state) => state.modal2.display2);\r\n  // Any react component can be passed onto this\r\n  const Current = useSelector((state) => state.modal2.current2);\r\n\r\n  const onClose = () => {\r\n    dispatch(hideModal2());\r\n  };\r\n\r\n  return (\r\n    mount &&\r\n    display &&\r\n    ReactDOM.createPortal(\r\n      <div onClick={onClose} className=\"modal2-background\">\r\n        <div\r\n          onClick={(e) => e.stopPropagation()}\r\n          className=\"modal2-content\"\r\n          id=\"modal2-content\"\r\n        >\r\n          <Current />\r\n        </div>\r\n      </div>,\r\n      mount\r\n    )\r\n  );\r\n}\r\n\r\nexport default Modal2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\n\r\nimport {\r\n  Grid,\r\n  GridItem,\r\n  Button,\r\n  HStack,\r\n  Container,\r\n  Text,\r\n  Center,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from \"@chakra-ui/react\";\r\nimport { updateUserGameStat } from \"../../store/session\";\r\n\r\nfunction Card() {\r\n  const [deck, setDeck] = useState([]);\r\n  const [dealerHand, setDealerHand] = useState([]);\r\n  const [playerHand, setPlayerHand] = useState([]);\r\n  const [dealerValue, setDealerValue] = useState(0);\r\n  const [playerValue, setPlayerValue] = useState(0);\r\n  const [hide, setHide] = useState(false);\r\n  const [isNameShown, setIsNameShown] = useState(false);\r\n  const [disable, setDisable] = useState(false);\r\n  const [playingGame, setPlayingGame] = useState(false);\r\n  const [hideButton, setHideButton] = useState(true);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [youWin, setYouWin] = useState(false);\r\n  const [youLose, setYouLose] = useState(false);\r\n  const [Tie, setTie] = useState(false);\r\n\r\n  const handleChange = () => {\r\n    setIsNameShown((prevState) => !prevState);\r\n  };\r\n\r\n  // get user from the state to update their game stat when they win\r\n  const user = useSelector((state) => state.session.user);\r\n  const dispatch = useDispatch();\r\n\r\n  // On start of a solo game\r\n  const startSolo = () => {\r\n    setPlayerValue(0);\r\n    setDealerValue(0);\r\n    // J,Q,K = 10 & A = 11 OR 1\r\n    let tempDeck = [];\r\n    let cardVal = [\r\n      \"2.\",\r\n      \"3.\",\r\n      \"4.\",\r\n      \"5.\",\r\n      \"6.\",\r\n      \"7.\",\r\n      \"8.\",\r\n      \"9.\",\r\n      \"10.\",\r\n      \"J.\",\r\n      \"Q.\",\r\n      \"K.\",\r\n      \"A.\",\r\n    ];\r\n    let suits = [\"♣\", \"♥\", \"♠\", \"♦\"];\r\n    for (let i = 0; i < cardVal.length; i++) {\r\n      let cardV = cardVal[i];\r\n      for (let j = 0; j < suits.length; j++) {\r\n        let cardT = suits[j];\r\n        let card = cardV + cardT;\r\n        tempDeck.push(card);\r\n      }\r\n    }\r\n    // call a helper function to shuffle our deck\r\n    shuffleDeck(tempDeck);\r\n  };\r\n\r\n  // Will trigger deck to be made upon loading into the page\r\n  useEffect(() => {\r\n    startSolo();\r\n  }, [playingGame]);\r\n\r\n  const dealCards = () => {\r\n    // onOpen()\r\n    setYouWin(false);\r\n    setYouLose(false);\r\n    setTie(false);\r\n    setPlayingGame(true);\r\n    setHideButton(false);\r\n    setHide(true);\r\n    setDisable(true);\r\n    handleChange();\r\n    setDealerHand([]);\r\n    setPlayerHand([]);\r\n    // Assign the cards that will be handed out to the player and dealers for game to start\r\n    let playerCard1 = deck[0];\r\n    let dealerCard1 = deck[1];\r\n    let playerCard2 = deck[2];\r\n    let dealerCard2 = deck[3];\r\n    // hand cards out to player and dealer\r\n    setPlayerHand([playerCard1, playerCard2]);\r\n    setDealerHand([dealerCard1, dealerCard2]);\r\n    // Update the deck being used\r\n    let updatedDeck = deck.slice(4);\r\n    setDeck(updatedDeck);\r\n    // valueCounter();\r\n  };\r\n\r\n  const shuffleDeck = (array) => {\r\n    // iterate through every card from end to start\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      // get a random index from which we will flip with the current index\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    setDeck(array);\r\n  };\r\n\r\n  // GameOver resets all values (function is called when round is over)\r\n  const gameOver = () => {\r\n    onOpen();\r\n    // setPlayerValue(0);\r\n    // setDealerValue(0);\r\n    // startSolo();\r\n    setHideButton(true);\r\n    setDisable(false);\r\n    setPlayingGame(false);\r\n  };\r\n\r\n  const clearScore = () => {\r\n    setPlayerValue(0);\r\n    setDealerValue(0);\r\n    onClose();\r\n  };\r\n\r\n  // removes card from deck and brings it to players card\r\n  const hitMe = () => {\r\n    let card = deck[0];\r\n    let temp = deck.slice(1);\r\n    let temp2 = playerHand;\r\n    temp2.push(card);\r\n    setPlayerHand(temp2);\r\n    setDeck(temp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (playerValue === 21 && dealerValue === 21) {\r\n      console.log(\"It's a tie!\");\r\n      setYouWin(false);\r\n      setYouLose(false);\r\n      setTie(true);\r\n      gameOver();\r\n    }\r\n  }, [playerValue, dealerValue]);\r\n\r\n  // Will constantly keep track of dealers hand and sum up the value\r\n  useEffect(() => {\r\n    let dealerVal = 0;\r\n    // Loop through the cards of the dealer and player to grab their values\r\n    for (let i = 0; i < dealerHand.length; i++) {\r\n      let num = dealerHand[i].split(\".\")[0];\r\n      if (num === \"J\" || num === \"Q\" || num === \"K\") {\r\n        dealerVal += 10;\r\n      } else if (num === \"A\") {\r\n        dealerVal += 11;\r\n      } else {\r\n        dealerVal += Number(num);\r\n      }\r\n    }\r\n    setDealerValue(dealerVal);\r\n  }, [dealerHand.length, playingGame]);\r\n\r\n  // Will constantly keep track players hand and sum up the value\r\n  useEffect(() => {\r\n    let playerVal = 0;\r\n\r\n    for (let i = 0; i < playerHand.length; i++) {\r\n      let num = playerHand[i].split(\".\")[0];\r\n      if (num === \"J\" || num === \"Q\" || num === \"K\") {\r\n        playerVal += 10;\r\n      } else if (num === \"A\") {\r\n        playerVal += 11;\r\n      } else {\r\n        playerVal += Number(num);\r\n      }\r\n    }\r\n    setPlayerValue(playerVal);\r\n\r\n    if (playerVal > 21) {\r\n      setYouLose(true);\r\n      gameOver();\r\n    }\r\n\r\n    if (playerVal === 21) {\r\n      setYouWin(true);\r\n      gameOver();\r\n    }\r\n  }, [playerHand.length, playingGame]);\r\n\r\n  // On a player hold we check conditionals to determine winner\r\n  const hold = () => {\r\n    let playerCopy = playerValue;\r\n    let dealerCopy = dealerValue;\r\n    let dealerHandCopy = dealerHand;\r\n    let deckCopy = deck;\r\n\r\n    while (playerCopy >= dealerCopy && dealerCopy < 20) {\r\n      let card = deckCopy[0];\r\n      let temp = deckCopy.slice(1);\r\n      let temp2 = dealerHandCopy;\r\n      temp2.push(card);\r\n      dealerHandCopy = temp2;\r\n\r\n      let num = dealerHandCopy[dealerHandCopy.length - 1].split(\".\")[0];\r\n      if (num === \"J\" || num === \"Q\" || num === \"K\") {\r\n        dealerCopy += 10;\r\n      } else if (num === \"A\") {\r\n        dealerCopy += 11;\r\n      } else {\r\n        dealerCopy += Number(num);\r\n      }\r\n\r\n      deckCopy = temp;\r\n      setDealerHand(temp2);\r\n      setDeck(temp);\r\n    }\r\n\r\n    if (dealerCopy < playerCopy || dealerCopy > 21) {\r\n      dispatch(updateUserGameStat(user));\r\n      setYouWin(true);\r\n      gameOver();\r\n    } else {\r\n      setYouLose(true);\r\n      gameOver();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container mt={16} centerContent>\r\n      <HStack mb={8}>\r\n        <Button\r\n          colorScheme=\"teal\"\r\n          size=\"lg\"\r\n          disabled={disable}\r\n          onClick={dealCards}\r\n        >\r\n          Start Game\r\n        </Button>\r\n        <Button\r\n          colorScheme=\"purple\"\r\n          size=\"md\"\r\n          disabled={hideButton}\r\n          size=\"md\"\r\n          onClick={hitMe}\r\n        >\r\n          Hit!\r\n        </Button>\r\n        <Button\r\n          colorScheme=\"purple\"\r\n          size=\"md\"\r\n          disabled={hideButton}\r\n          size=\"md\"\r\n          ml={16}\r\n          onClick={hold}\r\n        >\r\n          Hold\r\n        </Button>\r\n      </HStack>\r\n\r\n      {playerValue > 0 && (\r\n        <HStack mb={10}>\r\n          <Text fontSize=\"3xl\" textColor=\"white\" mr={32}>\r\n            Player: {playerValue}\r\n          </Text>\r\n          <Text fontSize=\"3xl\" textColor=\"white\" ml={32}>\r\n            Dealer: {dealerValue}\r\n          </Text>\r\n        </HStack>\r\n      )}\r\n      <Grid\r\n        hidden={hide}\r\n        bg=\"#a41d1d\"\r\n        color=\"white\"\r\n        w=\"100px\"\r\n        h=\"150px\"\r\n        border=\"2px\"\r\n        borderRadius=\"10\"\r\n        fontSize=\"2xl\"\r\n        templateRows=\"repeat(3, 1fr)\"\r\n      >\r\n        <GridItem />\r\n        <GridItem align=\"center\">Deck</GridItem>\r\n        <GridItem />\r\n      </Grid>\r\n      {isNameShown && (\r\n        <Text textColor=\"white\" fontSize=\"xl\">\r\n          Dealer Hand\r\n        </Text>\r\n      )}\r\n      <HStack mb={10}>\r\n        {dealerHand.length > 0 &&\r\n          dealerHand.map((card) => (\r\n            <Grid\r\n              bg=\"white\"\r\n              color=\"red\"\r\n              w=\"100px\"\r\n              h=\"150px\"\r\n              border=\"1px\"\r\n              borderRadius=\"10\"\r\n              fontSize=\"2xl\"\r\n              templateRows=\"repeat(3, 1fr)\"\r\n            >\r\n              <GridItem align=\"left\" ml={2}>\r\n                {card.split(\".\")[0]}\r\n              </GridItem>\r\n              <GridItem align=\"center\">{card.split(\".\")[1]}</GridItem>\r\n              <GridItem align=\"left\" mr={2} mt={4} transform=\"scale(-1)\">\r\n                {card.split(\".\")[0]}\r\n              </GridItem>\r\n            </Grid>\r\n          ))}\r\n      </HStack>\r\n      {isNameShown && (\r\n        <Text textColor=\"white\" fontSize=\"xl\">\r\n          Player Hand\r\n        </Text>\r\n      )}\r\n      <HStack>\r\n        {playerHand.length > 0 &&\r\n          playerHand.map((card) => (\r\n            <Grid\r\n              bg=\"white\"\r\n              color=\"black\"\r\n              w=\"100px\"\r\n              h=\"150px\"\r\n              border=\"1px\"\r\n              borderRadius=\"10\"\r\n              fontSize=\"2xl\"\r\n              templateRows=\"repeat(3, 1fr)\"\r\n            >\r\n              <GridItem align=\"left\" ml={2}>\r\n                {card.split(\".\")[0]}\r\n              </GridItem>\r\n              <GridItem align=\"center\">{card.split(\".\")[1]}</GridItem>\r\n              <GridItem align=\"left\" mr={2} mt={4} transform=\"scale(-1)\">\r\n                {card.split(\".\")[0]}\r\n              </GridItem>\r\n            </Grid>\r\n          ))}\r\n      </HStack>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader />\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Center mb={4}>\r\n              <Text noOfLines={2}>\r\n                Player's Score: {playerValue} vs Dealer's Score: {dealerValue}\r\n              </Text>\r\n            </Center>\r\n            {youWin && (\r\n              <Text>\r\n                {\" \"}\r\n                You win!! Go and boast about you being smart! Press on 'Start\r\n                Game' to play another round!\r\n              </Text>\r\n            )}\r\n            {youLose && (\r\n              <Text>\r\n                {\" \"}\r\n                Womp, womp, you lost. Practice some more! Press on 'Start Game'\r\n                to play another round!\r\n              </Text>\r\n            )}\r\n            {Tie && (\r\n              <Text>\r\n                {\" \"}\r\n                It's a tie! Press on 'Start Game' to play another round!\r\n              </Text>\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button colorScheme=\"teal\" mr={3} onClick={clearScore}>\r\n              Okay\r\n            </Button>\r\n            {/* <Button variant=\"ghost\">Secondary Action</Button> */}\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { login } from \"../../store/session\";\r\nimport { hideModal2 } from \"../../store/modal2\";\r\nimport { Button, Text } from \"@chakra-ui/react\"\r\n\r\nconst LoginForm = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.session.user);\r\n  const [errors, setErrors] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onLogin = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(username, password));\r\n\r\n    dispatch(hideModal2());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const updateUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  if (user) {\r\n    return <Redirect to=\"/\" />;\r\n  } \r\n\r\n  return (\r\n    <div className=\"login_form\">\r\n      <div>\r\n        <form className=\"login\" onSubmit={onLogin}>\r\n          <div>\r\n            {errors.map((error) => (\r\n              <div>{error}</div>\r\n            ))}\r\n          </div>\r\n          <Text textColor=\"white\" noOfLines={2} maxW=\"75%\" textAlign=\"center\" mb={4} fontSize=\"xl\" > Welcome back! Please add your username and password.</Text>\r\n          <div className=\"login_input\">\r\n            <input\r\n              className=\"input\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              placeholder=\" Username\"\r\n              value={username}\r\n              onChange={updateUsername}\r\n            />\r\n          </div>\r\n          <div className=\"login_input\">\r\n            <input\r\n              className=\"input\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\" Password\"\r\n              value={password}\r\n              onChange={updatePassword}\r\n            />\r\n          </div>\r\n          <div className=\"login_input\">\r\n            <Button colorScheme=\"teal\" className=\"input2\" type=\"submit\" value=\"Login\">Log In</Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/session\";\r\nimport { hideModal2 } from \"../../store/modal2\";\r\nimport { Button, Text } from \"@chakra-ui/react\"\r\n\r\nimport \"./auth.css\";\r\n\r\nconst SignUpForm = () => {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const user = useSelector((state) => state.session.user);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n\r\n  const onSignUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password === repeatPassword) {\r\n      await dispatch(signUp(username, password));\r\n      await dispatch(hideModal2());\r\n      alert(\"Your account has been successfully made. Please log in using the 'Log In' button. Thank you!\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const updateUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const updateRepeatPassword = (e) => {\r\n    setRepeatPassword(e.target.value);\r\n  };\r\n\r\n  if (user) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"signup_form\">\r\n      <form className=\"signup\" onSubmit={onSignUp}>\r\n        <div></div>\r\n        <Text textColor=\"white\" noOfLines={2} maxW=\"75%\" textAlign=\"center\" mb={4} fontSize=\"xl\" > Welcome! Please make an account below.</Text>\r\n        <div className=\"signup_input\">\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\" Username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={updateUsername}\r\n            value={username}\r\n          ></input>\r\n        </div>\r\n        <div className=\"signup_input\">\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\" Password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={updatePassword}\r\n            value={password}\r\n          ></input>\r\n        </div>\r\n        <div className=\"signup_input\">\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\" Repeat Password\"\r\n            type=\"password\"\r\n            name=\"repeat_password\"\r\n            onChange={updateRepeatPassword}\r\n            value={repeatPassword}\r\n            required={true}\r\n          ></input>\r\n        </div>\r\n        <div className=\"signup_input\">\r\n          <Button colorScheme=\"teal\" className=\"input2\" type=\"submit\" value=\"SignUp\">Sign Up</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Login from \"../auth/Login\";\r\nimport SignUp from \"../auth/Signup\";\r\nimport { showModal2, setCurrentModal2 } from \"../../store/modal2\";\r\nimport { logout } from \"../../store/session\";\r\nimport { Button, Stack } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.session.user);\r\n  const showLogin = () => {\r\n    dispatch(setCurrentModal2(Login));\r\n    dispatch(showModal2());\r\n  };\r\n\r\n  const showSignup = () => {\r\n    dispatch(setCurrentModal2(SignUp));\r\n    dispatch(showModal2());\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      {user && (\r\n        <div>\r\n          <Text textColor=\"white\" fontSize=\"xl\">\r\n            BlackJack!\r\n          </Text>\r\n        </div>\r\n      )}\r\n      <Link to=\"/\">\r\n        <Button colorScheme=\"teal\">Home</Button>\r\n      </Link>\r\n      <div>\r\n        {!user && (\r\n          <Stack direction=\"row\" spacing={3}>\r\n            <Button colorScheme=\"teal\" onClick={showLogin}>\r\n              Login\r\n            </Button>\r\n            <Button colorScheme=\"teal\" onClick={showSignup}>\r\n              Signup\r\n            </Button>\r\n          </Stack>\r\n        )}\r\n        {user && (\r\n          <Button colorScheme=\"gray\" onClick={logoutUser}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Card from \"../Card\";\r\nimport \"./gameboard.css\";\r\nimport GameNavBar from \"../Navbars/GameNavBar\";\r\n\r\nfunction Gameboard() {\r\n  return (\r\n    <div className=\"box\">\r\n      <GameNavBar />\r\n      <Card />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gameboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport GameBoard from \"./index\";\r\n\r\n// socket.io-client\r\nimport { io } from \"socket.io-client\";\r\nconst SERVER = \"http://localhost:8000\";\r\n\r\nfunction OnlineGameBoard() {\r\n  // setup socket client\r\n  const socket = io(SERVER);\r\n\r\n  const [playerValue, setPlayerValue] = useState(0);\r\n  const [value, setValue] = useState(0);\r\n\r\n  // const getPlayerValue = (value) => {\r\n  //   setPlayerValue(value);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {});\r\n\r\n    console.log(value, \"value\");\r\n    // socket.emit(\"playerValue\", playerValue);\r\n\r\n    // console.log(\"player value: \" + playerValue);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GameBoard />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OnlineGameBoard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Login from \"../auth/Login\";\r\nimport SignUp from \"../auth/Signup\";\r\nimport { showModal2, setCurrentModal2 } from \"../../store/modal2\";\r\nimport { logout } from \"../../store/session\";\r\nimport { Button, Stack, Text } from \"@chakra-ui/react\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.session.user);\r\n  const showLogin = () => {\r\n    dispatch(setCurrentModal2(Login));\r\n    dispatch(showModal2());\r\n  };\r\n\r\n  const showSignup = () => {\r\n    dispatch(setCurrentModal2(SignUp));\r\n    dispatch(showModal2());\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      {!user && <div></div>}\r\n      {user && (\r\n        <div>\r\n          <Text textColor=\"white\" fontSize=\"lg\">\r\n            Welcome, {user}!\r\n          </Text>\r\n        </div>\r\n      )}\r\n      {user && (\r\n        <Stack direction=\"row\" spacing={3}>\r\n          <Link to=\"gameboard\">\r\n            <Button colorScheme=\"teal\" size=\"md\">\r\n              Game Board\r\n            </Button>\r\n          </Link>\r\n          <Link to=\"leaderboard\">\r\n            <Button colorScheme=\"teal\" size=\"md\">\r\n              Leader Board\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n      )}\r\n\r\n      <div>\r\n        {!user && (\r\n          <Stack direction=\"row\" spacing={3}>\r\n            <Button colorScheme=\"teal\" onClick={showLogin}>\r\n              Login\r\n            </Button>\r\n            <Button colorScheme=\"teal\" size=\"md\" onClick={showSignup}>\r\n              Signup\r\n            </Button>\r\n          </Stack>\r\n        )}\r\n        {user && (\r\n          <Button colorScheme=\"gray\" size=\"md\" onClick={logoutUser}>\r\n            Logout\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport Navbar from \"../Navbars/Navbar\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"main\">\r\n      <Navbar />\r\n      <Link to=\"/about\">\r\n        <button className=\"developers\">Development Team</button>\r\n      </Link>\r\n      <div className=\"footer\">\r\n        <div>\r\n          <i className=\"devicon-react-original-wordmark colored\"></i>\r\n        </div>\r\n        <div>\r\n          <i className=\"devicon-redux-original colored\"></i>\r\n        </div>\r\n        <div>\r\n          <i className=\"devicon-mongodb-plain-wordmark colored\"></i>\r\n        </div>\r\n        <div>\r\n          <i className=\"devicon-express-original-wordmark colored\"></i>\r\n        </div>\r\n        <div>\r\n          <i className=\"devicon-nodejs-plain-wordmark colored\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport WebIcon from \"@material-ui/icons/Web\";\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nimport \"./About.css\";\r\nimport GameNavBar from \"../Navbars/GameNavBar\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <GameNavBar />\r\n      <div className=\"about_container\">\r\n        <div className=\"about_box\">\r\n          <span></span>\r\n          <div className=\"about_content\">\r\n            <div>\r\n              <Text fontSize=\"2xl\">Jairo Calderon</Text>\r\n            </div>\r\n            <div className=\"about_icons\">\r\n              <a href=\"https://github.com/JairoCal\" target=\"_blank\">\r\n                <GitHubIcon />\r\n              </a>\r\n              <a\r\n                href=\"https://www.linkedin.com/in/jairo-calderon-44512ba5/\"\r\n                target=\"_blank\"\r\n              >\r\n                <LinkedInIcon />\r\n              </a>\r\n              <a href=\"https://jairocal.github.io/Portfolio/\" target=\"_blank\">\r\n                <WebIcon />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"about_box\">\r\n          <span></span>\r\n          <div className=\"about_content\">\r\n            <div>\r\n              <Text fontSize=\"2xl\">Maira Garcia</Text>\r\n            </div>\r\n            <div className=\"about_icons\">\r\n              <a href=\"https://github.com/mairagee524\">\r\n                <GitHubIcon />\r\n              </a>\r\n              <a\r\n                href=\"https://www.linkedin.com/in/mairagarcia524/\"\r\n                target=\"_blank\"\r\n              >\r\n                <LinkedInIcon />\r\n              </a>\r\n              <a\r\n                href=\"https://mairagee524.github.io/portfolio/\"\r\n                target=\"_blank\"\r\n              >\r\n                <WebIcon />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"about_box\">\r\n          <span></span>\r\n          <div className=\"about_content\">\r\n            <div>\r\n              <Text fontSize=\"2xl\">Nhu Phan</Text>\r\n            </div>\r\n            <div className=\"about_icons\">\r\n              <a href=\"https://github.com/wizgurl101\" target=\"_blank\">\r\n                <GitHubIcon />\r\n              </a>\r\n              <a\r\n                href=\"https://www.linkedin.com/in/nhu-phan-canada/\"\r\n                target=\"_blank\"\r\n              >\r\n                <LinkedInIcon />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","const GET_LEADER_BOARD_INFO = \"leaderboard/GET_LEADER_BOARD_INFO\";\r\n\r\nconst setLeaderBoard = (users) => ({\r\n  type: GET_LEADER_BOARD_INFO,\r\n  payload: users,\r\n});\r\n\r\n// Get leader board info from backend\r\nexport const getLeaderBoardInfo = () => async (dispatch) => {\r\n  const response = await fetch(\"/api/users/leaderboard\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  const data = await response.json();\r\n  dispatch(setLeaderBoard(data));\r\n};\r\n\r\n// reducer\r\nconst initialState = { users: [] };\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_LEADER_BOARD_INFO:\r\n      return { users: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Container,\r\n  TableCaption,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport \"./leaderboard.css\";\r\nimport GameNavBar from \"../Navbars/GameNavBar\";\r\nimport { getLeaderBoardInfo } from \"../../store/leaderboard\";\r\n\r\nfunction Leaderboard() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getLeaderBoardInfo());\r\n    setLoading(false);\r\n  }, [dispatch]);\r\n\r\n  const users = useSelector((state) => state.leaderboard.users);\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <GameNavBar />\r\n      <Container className=\"container\">\r\n        {loading && (\r\n          <Spinner\r\n            thickness=\"5px\"\r\n            speed=\"0.5s\"\r\n            emptyColor=\"white\"\r\n            color=\"teal\"\r\n            size=\"xl\"\r\n          />\r\n        )}\r\n        <Table className=\"table\" size=\"lg\" variant=\"striped\" colorScheme=\"teal\">\r\n          <TableCaption className=\"caption\" placement=\"top\">\r\n            Top 10 Players\r\n          </TableCaption>\r\n          <Thead>\r\n            <Tr className=\"tableHeader\">\r\n              <Th>USERNAME</Th>\r\n              <Th>GAMES WON</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody className=\"tablebody\">\r\n            {users.map((user) => (\r\n              <Tr key={user._id}>\r\n                <Td>{user.username}</Td>\r\n                <Td>{user.numOfGameWon}</Td>\r\n              </Tr>\r\n            ))}\r\n          </Tbody>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// ProtectedRoute to be used if there's a component only logged in users should access\r\nimport ProtectedRoute from \"./components/auth/ProtectedRoute\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { authenticate } from \"./store/session\";\r\nimport Modal from \"./components/Modal/modal\";\r\nimport Modal2 from \"./components/Modal/modal2\";\r\nimport GameBoard from \"./components/GameBoardPage\";\r\nimport OnlineGameBoard from \"./components/GameBoardPage/OnlineGameBoard\";\r\nimport Home from \"./components/Homepage/Home\";\r\nimport About from \"./components/About/About\";\r\nimport LeaderBoard from \"./components/LeaderboardPage/index\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  // must complete API in the backend before this works properly\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(authenticate());\r\n      setLoaded(true);\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  if (!loaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Modal />\r\n      <Modal2 />\r\n      <Switch>\r\n        <Route path=\"/\" exact={true}>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/gameboard\" exact={true}>\r\n          <GameBoard />\r\n        </Route>\r\n        <Route path=\"/gameboard/online\">\r\n          <OnlineGameBoard />\r\n        </Route>\r\n        <Route path=\"/about\" exact={true}>\r\n          <About />\r\n        </Route>\r\n        <Route path=\"/leaderboard\" exact={true}>\r\n          <LeaderBoard />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport session from \"./session\";\r\nimport modal from \"./modal\";\r\nimport modal2 from \"./modal2\";\r\nimport leaderboard from \"./leaderboard\";\r\n\r\nconst rootReducer = combineReducers({\r\n  session,\r\n  modal,\r\n  modal2,\r\n  leaderboard,\r\n});\r\n\r\nlet enhancer;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  enhancer = applyMiddleware(thunk);\r\n} else {\r\n  const logger = require(\"redux-logger\").default;\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\r\n}\r\n\r\nconst configureStore = (preloadedState) => {\r\n  return createStore(rootReducer, preloadedState, enhancer);\r\n};\r\n\r\nexport default configureStore;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider, useDispatch } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\nimport App from \"./App\";\r\nimport configureStore from \"./store\";\r\n\r\nimport { setModalMount } from \"./store/modal\";\r\nimport { setModalMount2 } from \"./store/modal2\";\r\n\r\nconst store = configureStore();\r\n\r\nconst Root = () => {\r\n  const modalMooringRef = useRef(null);\r\n  const modalMooringRef2 = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalMount(modalMooringRef.current));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setModalMount2(modalMooringRef2.current));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <App />\r\n      <div ref={modalMooringRef} className=\"modal\" />\r\n      <div ref={modalMooringRef2} className=\"modal2\" />\r\n    </>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider>\r\n    <Provider store={store}>\r\n      <Root />\r\n    </Provider>\r\n    </ChakraProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}